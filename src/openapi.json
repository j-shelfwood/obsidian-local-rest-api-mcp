{
  "openapi": "3.0.0",
  "info": {
    "title": "Obsidian Vault REST API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://{host}/api",
      "variables": {
        "host": {
          "default": "localhost",
          "description": "Base hostname (change to 127.0.0.1, my-vm.local, etc.)"
        }
      }
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/files": {
      "get": {
        "tags": ["Files"],
        "operationId": "listFiles",
        "summary": "List all files in the vault",
        "responses": {
          "200": {
            "description": "List of file objects, each with path, last_modified, created_at, size, and mime_type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "path": {
                        "type": "string",
                        "description": "The path to the file"
                      },
                      "last_modified": {
                        "type": "string",
                        "format": "date-time",
                        "description": "ISO 8601 timestamp of the last modification time"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "ISO 8601 timestamp of the creation time (inode change time)"
                      },
                      "size": {
                        "type": "integer",
                        "description": "File size in bytes"
                      },
                      "mime_type": {
                        "type": "string",
                        "nullable": true,
                        "description": "MIME type of the file"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Files"],
        "operationId": "createFile",
        "summary": "Create a new file in the vault",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["path"],
                "properties": {
                  "path": { "type": "string" },
                  "type": {
                    "type": "string",
                    "enum": ["file", "directory"]
                  },
                  "content": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "File created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "path": { "type": "string" }
                  }
                }
              }
            }
          },
          "409": {
            "description": "File already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/files/{path}": {
      "get": {
        "tags": ["Files"],
        "operationId": "getFile",
        "summary": "Get raw content of a file",
        "parameters": [
          {
            "in": "path",
            "name": "path",
            "schema": { "type": "string" },
            "style": "simple",
            "explode": false,
            "allowReserved": true,
            "required": true,
            "description": "URL-encoded vault-relative path to file"
          }
        ],
        "responses": {
          "200": {
            "description": "Raw file content",
            "content": {
              "text/plain": { "schema": { "type": "string" } },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "File not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Files"],
        "operationId": "updateFile",
        "summary": "Update file content",
        "parameters": [
          {
            "in": "path",
            "name": "path",
            "schema": { "type": "string" },
            "style": "simple",
            "explode": false,
            "allowReserved": true,
            "required": true,
            "description": "URL-encoded vault-relative path to file"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["content"],
                "properties": {
                  "content": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "path": { "type": "string" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "File not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Files"],
        "operationId": "deleteFile",
        "summary": "Delete a file",
        "parameters": [
          {
            "in": "path",
            "name": "path",
            "schema": { "type": "string" },
            "style": "simple",
            "explode": false,
            "allowReserved": true,
            "required": true,
            "description": "URL-encoded vault-relative path to file"
          }
        ],
        "responses": {
          "200": {
            "description": "File deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "404": {
            "description": "File not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notes": {
      "get": {
        "tags": ["Notes"],
        "operationId": "listNotes",
        "summary": "List all markdown notes with parsed front matter",
        "responses": {
          "200": {
            "description": "List of notes (Laravel Resource)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Note"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Notes"],
        "operationId": "createNote",
        "summary": "Create a new note",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NoteInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Note created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Note"
                }
              }
            }
          }
        }
      }
    },
    "/notes/{path}": {
      "get": {
        "tags": ["Notes"],
        "operationId": "getNote",
        "summary": "Retrieve a single note",
        "parameters": [
          {
            "in": "path",
            "name": "path",
            "schema": { "type": "string" },
            "style": "simple",
            "explode": false,
            "allowReserved": true,
            "required": true,
            "description": "URL-encoded vault-relative path to note"
          }
        ],
        "responses": {
          "200": {
            "description": "Note object (Laravel Resource)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Note"
                }
              }
            }
          },
          "404": {
            "description": "Note not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Notes"],
        "operationId": "replaceNote",
        "summary": "Replace a note",
        "parameters": [
          {
            "in": "path",
            "name": "path",
            "schema": { "type": "string" },
            "style": "simple",
            "explode": false,
            "allowReserved": true,
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NoteInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Note replaced (Laravel Resource)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Note"
                }
              }
            }
          },
          "404": {
            "description": "Note not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Notes"],
        "operationId": "updateNote",
        "summary": "Update parts of a note",
        "parameters": [
          {
            "in": "path",
            "name": "path",
            "schema": { "type": "string" },
            "style": "simple",
            "explode": false,
            "allowReserved": true,
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "front_matter": { "type": "object" },
                  "content": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Note updated (Laravel Resource)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Note"
                }
              }
            }
          },
          "404": {
            "description": "Note not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Notes"],
        "operationId": "deleteNote",
        "summary": "Delete a note",
        "parameters": [
          {
            "in": "path",
            "name": "path",
            "schema": { "type": "string" },
            "style": "simple",
            "explode": false,
            "allowReserved": true,
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Note deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "404": {
            "description": "Note not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/bulk/notes/delete": {
      "delete": {
        "tags": ["Notes"],
        "operationId": "bulkDeleteNotes",
        "summary": "Delete multiple notes",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkDeleteInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Bulk delete result (Laravel Resource)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDeleteResult"
                }
              }
            }
          }
        }
      }
    },
    "/bulk/notes/update": {
      "patch": {
        "tags": ["Notes"],
        "operationId": "bulkUpdateNotes",
        "summary": "Update multiple notes",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkUpdateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Bulk update result (Laravel Resource)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkUpdateResult"
                }
              }
            }
          }
        }
      }
    },
    "/metadata/keys": {
      "get": {
        "tags": ["Metadata"],
        "operationId": "listMetadataKeys",
        "summary": "List all front matter keys across notes",
        "responses": {
          "200": {
            "description": "Unique front matter keys wrapped in a data object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": { "type": "string" }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          }
        }
      }
    },
    "/metadata/values/{key}": {
      "get": {
        "tags": ["Metadata"],
        "operationId": "listMetadataValues",
        "summary": "List unique values for a front matter key",
        "parameters": [
          {
            "in": "path",
            "name": "key",
            "schema": { "type": "string" },
            "style": "simple",
            "explode": false,
            "allowReserved": true,
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Unique values wrapped in a data object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "oneOf": [{ "type": "string" }, { "type": "number" }]
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "SuccessResponse": {
        "description": "Successful operation",
        "type": "object",
        "properties": {
          "message": { "type": "string" },
          "path": { "type": "string" }
        }
      },
      "ErrorResponse": {
        "description": "Error response",
        "type": "object",
        "properties": {
          "error": { "type": "string" }
        }
      },
      "Note": {
        "description": "A vault note",
        "type": "object",
        "properties": {
          "path": { "type": "string" },
          "front_matter": {
            "type": "object",
            "additionalProperties": true
          },
          "content": { "type": "string" }
        }
      },
      "NoteInput": {
        "description": "Input for creating or replacing a note",
        "type": "object",
        "required": ["path"],
        "properties": {
          "path": { "type": "string" },
          "front_matter": {
            "type": "object",
            "additionalProperties": true
          },
          "content": { "type": "string" }
        }
      },
      "NoteUpdate": {
        "description": "Partial update for a note",
        "type": "object",
        "required": ["path"],
        "properties": {
          "path": { "type": "string" },
          "front_matter": {
            "type": "object",
            "additionalProperties": true
          },
          "content": { "type": "string" }
        }
      },
      "BulkDeleteInput": {
        "description": "Input for deleting multiple notes",
        "type": "object",
        "required": ["paths"],
        "properties": {
          "paths": {
            "type": "array",
            "items": { "type": "string" }
          }
        }
      },
      "BulkDeleteResult": {
        "description": "Result of bulk delete",
        "type": "object",
        "properties": {
          "deleted": {
            "type": "array",
            "items": { "type": "string" }
          },
          "notFound": {
            "type": "array",
            "items": { "type": "string" }
          }
        }
      },
      "BulkUpdateInput": {
        "description": "Input for updating multiple notes",
        "type": "object",
        "required": ["items"],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NoteUpdate"
            }
          }
        }
      },
      "BulkUpdateResult": {
        "description": "Result of bulk update",
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "path": { "type": "string" },
                "status": { "type": "string" },
                "note": {
                  "$ref": "#/components/schemas/Note"
                }
              }
            }
          }
        }
      }
    }
  }
}
